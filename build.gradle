import com.scarlatti.TestSourceSetFactory

buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

TestSourceSetFactory.newSourceSet(project)
		.withName("shared")
		.withSrcDirs(['src/test/shared/groovy'])
		.withResourceDirs(['src/test/shared/resources'])
		.withDependencies([sourceSets.test])
		.build()

TestSourceSetFactory.newSourceSet(project)
		.withName("unitTest")
		.withSrcDirs(['src/test/unit/groovy'])
		.withResourceDirs(['src/test/unit/resources'])
		.withDependencies([sourceSets.shared])
		.build()

TestSourceSetFactory.newSourceSet(project)
		.withName("functionTest")
		.withSrcDirs(['src/test/function/groovy'])
		.withResourceDirs(['src/test/function/resources'])
		.withDependencies([sourceSets.shared])
		.build()

TestSourceSetFactory.newSourceSet(project)
		.withName("systemTest")
		.withSrcDirs(['src/test/system/groovy'])
		.withResourceDirs(['src/test/system/resources'])
		.withDependencies([sourceSets.shared])
		.build()

TestSourceSetFactory.newSourceSet(project)
		.withName("util")
		.withSrcDirs(['src/test/util/groovy'])
		.withResourceDirs(['src/test/util/resources'])
		.withDependencies([sourceSets.shared])
		.build()

task unitTest(type: Test, group: 'verification') {
	testClassesDir = sourceSets.unitTest.output.classesDir
	classpath += sourceSets.unitTest.runtimeClasspath
	outputs.upToDateWhen {false}
}

task functionTest(type: Test, group: 'verification') {
	mustRunAfter unitTest
	testClassesDir = sourceSets.functionTest.output.classesDir
	classpath += sourceSets.functionTest.runtimeClasspath
	outputs.upToDateWhen {false}
}

task systemTest(type: Test, group: 'verification') {
	testClassesDir = sourceSets.systemTest.output.classesDir
	classpath += sourceSets.systemTest.runtimeClasspath
	outputs.upToDateWhen {false}
}

test {
	dependsOn = [unitTest, functionTest]
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-amqp'
	compile 'org.codehaus.groovy:groovy-all:2.4.7'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
	testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
	testCompile 'cglib:cglib-nodep:2.2'
}
