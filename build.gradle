buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

sourceSets {



//	// we need to build the common source set
//	common {
//		groovy {
//			srcDirs = [
//					'src/test/common/groovy',
//					'src/test/system/groovy',
//					'src/test/unit/groovy'
//            ]
//		}
//		resources {
//			srcDirs = ['src/test/common/resources']
//		}
//
//		compileClasspath += sourceSets.main.runtimeClasspath
//	}

	// we need to build the common source set
	systemTest {
		groovy {
			srcDirs = [
					'src/test/system/groovy',
					'src/test/common/groovy'
			]
		}
		resources {
			srcDirs = ['src/test/system/resources']
		}

		compileClasspath += sourceSets.test.runtimeClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}

	unitTest {
		groovy {
			srcDirs = ['src/test/unit/groovy',
					   'src/test/common/groovy'
			]
		}
		resources {
			srcDirs = ['src/test/unit/resources']
		}

		compileClasspath += sourceSets.test.runtimeClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}

	// we need to build the common source set
	functionTest {
		groovy {
			srcDirs = ['src/test/common/groovy',
					   'src/test/function/groovy'
			]
		}
		resources {
			srcDirs = ['src/test/function/resources']
		}

		compileClasspath += sourceSets.test.runtimeClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}

	unitAndFunctionTest {

		groovy {
			srcDirs += sourceSets.unitTest.allSource.srcDirs
			srcDirs += sourceSets.functionTest.allSource.srcDirs
		}

		compileClasspath += sourceSets.test.runtimeClasspath
		runtimeClasspath += sourceSets.test.runtimeClasspath
	}
}

task unitTest(type: Test, group: 'verification') {
	testClassesDir = sourceSets.unitTest.output.classesDir
	classpath += sourceSets.unitTest.runtimeClasspath
}

task functionTest(type: Test, group: 'verification') {
	testClassesDir = sourceSets.functionTest.output.classesDir
	classpath += sourceSets.functionTest.runtimeClasspath
}

task systemTest(type: Test, group: 'verification') {
	testClassesDir = sourceSets.systemTest.output.classesDir
	classpath += sourceSets.systemTest.runtimeClasspath
}

test {
	testClassesDir = sourceSets.unitAndFunctionTest.output.classesDir
	classpath += sourceSets.unitAndFunctionTest.runtimeClasspath
}

idea {
	module {
//		name = 'penguin'
////		sourceDirs += file('src/test/common/groovy')
////		testSourceDirs += file('src/test/commmon')
//		contentRoot = file('src/test/common')
	}
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.springframework.boot:spring-boot-starter-amqp'
	compile 'org.codehaus.groovy:groovy-all:2.4.7'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
	testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4'
	testCompile 'cglib:cglib-nodep:2.2'
}
